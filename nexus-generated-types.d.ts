/**
 * This file was automatically generated by Nexus 0.11.7
 * Do not make changes to this file directly
 */

import { core } from 'nexus';
declare global {
  interface NexusGenCustomDefinitionMethods<TypeName extends string> {
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void; // "Date";
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {}

export interface NexusGenEnums {
  CategoriesSortByEnum: 'ID_ASC' | 'ID_DESC' | 'NAME_ASC' | 'NAME_DESC';
  CoreSystemParametersSortByEnum: 'SORT_NUMBER_ASC' | 'SORT_NUMBER_DESC';
  CoreSystemSuStreParametersSortByEnum: 'SORT_NUMBER_ASC' | 'SORT_NUMBER_DESC';
  CoreSystemSuStreTypeEnum: 'CCR' | 'LOCAL' | 'STRE' | 'SU';
  CoreSystemSuStresSortByEnum: 'ID_ASC' | 'ID_DESC' | 'NAME_ASC' | 'NAME_DESC' | 'SORT_NUMBER_ASC' | 'SORT_NUMBER_DESC';
  CoreSystemTypeEnum: 'CCR' | 'LOCAL' | 'STRE' | 'SU';
  CoreSystemsSortByEnum: 'ID_ASC' | 'ID_DESC' | 'NAME_ASC' | 'NAME_DESC' | 'SORT_NUMBER_ASC' | 'SORT_NUMBER_DESC';
  EquipmentConditionStatusEnum: 'ABNORMAL' | 'NORMAL';
  EquipmentStatusColorEnum: 'GREEN' | 'NEUTRAL' | 'RED' | 'YELLOW';
  EquipmentStatusStateEnum: 'EMERGENCY_RUNNING' | 'EMERGENCY_STOP' | 'NORMAL_OPERASI' | 'STANDBY' | 'STANDBY_EMERGENCY';
  EquipmentStatusesSortByEnum: 'ID_ASC' | 'ID_DESC' | 'NAME_ASC' | 'NAME_DESC' | 'SORT_NUMBER_ASC' | 'SORT_NUMBER_DESC';
  GenderEnum: 'FEMALE' | 'MALE';
  GroupsSortByEnum: 'ID_ASC' | 'ID_DESC' | 'NAME_ASC' | 'NAME_DESC';
  MeasurementUnitsSortByEnum: 'ID_ASC' | 'ID_DESC' | 'NAME_ASC' | 'NAME_DESC' | 'SYMBOL_ASC' | 'SYMBOL_DESC';
  PermissionsSortByEnum: 'ID_ASC' | 'ID_DESC' | 'NAME_ASC' | 'NAME_DESC';
  PlansSortByEnum: 'CREATED_AT_ASC' | 'CREATED_AT_DESC' | 'ID_ASC' | 'ID_DESC';
  PlansStatusByEnum: 'ACTIVE' | 'DONE' | 'STANDBY';
  RecordStatusByEnum: 'DANGER' | 'NORMAL' | 'WARNING';
  RecordSystemTypeByEnum: 'CCR' | 'LOCAL';
  RoleStatusEnum: 'ACTIVE' | 'INACTIVE';
  RolesSortByEnum: 'ID_ASC' | 'ID_DESC' | 'NAME_ASC' | 'NAME_DESC' | 'STATUS_ASC' | 'STATUS_DESC';
  ShiftsSortByEnum:
    | 'ENDS_AT_ASC'
    | 'ENDS_AT_DESC'
    | 'ID_ASC'
    | 'ID_DESC'
    | 'NAME_ASC'
    | 'NAME_DESC'
    | 'STARTS_AT_ASC'
    | 'STARTS_AT_DESC';
  StartStopStateByEnum: 'STARTED' | 'STOPPED';
  StartStopStateEnum: 'STARTED' | 'STOPPED';
  StartStopStateRecordEnum: 'STARTED' | 'STOPPED';
  UnitsSortByEnum: 'ID_ASC' | 'ID_DESC' | 'NAME_ASC' | 'NAME_DESC';
  UserStatusEnum: 'ACTIVE' | 'DELETED' | 'INACTIVE';
  UsersSortByEnum:
    | 'GENDER_ASC'
    | 'GENDER_DESC'
    | 'ID_ASC'
    | 'ID_DESC'
    | 'NAME_ASC'
    | 'NAME_DESC'
    | 'NIP_ASC'
    | 'NIP_DESC'
    | 'PHONE_ASC'
    | 'PHONE_DESC'
    | 'REGISTERED_AT_ASC'
    | 'REGISTERED_AT_DESC'
    | 'USERNAME_ASC'
    | 'USERNAME_DESC';
}

export interface NexusGenRootTypes {
  ActivitiesSummary: {
    // root type
    data: NexusGenRootTypes['Activity'][]; // [Activity!]!
    totalCount: number; // Int!
  };
  Activity: {
    // root type
    id: number; // Int!
    time: string; // String!
    value: string; // String!
  };
  CategoriesSummary: {
    // root type
    data: NexusGenRootTypes['Category'][]; // [Category!]!
    totalCount: number; // Int!
  };
  Category: {
    // root type
    id: number; // Int!
    name: string; // String!
  };
  CoreSystem: {
    // root type
    equipmentStatusTracking: boolean; // Boolean!
    id: number; // Int!
    kksNumber: string; // String!
    name: string; // String!
    NFCTagId?: string | null; // String
    NFCTags: NexusGenRootTypes['CoreSystemNFCTag'][]; // [CoreSystemNFCTag!]!
    parentId?: number | null; // Int
    sortNumber: number; // Int!
    startStopTracking: boolean; // Boolean!
    State?: NexusGenRootTypes['State'] | null; // State
    subSystems: NexusGenRootTypes['CoreSystem'][]; // [CoreSystem!]!
    type: NexusGenEnums['CoreSystemTypeEnum']; // CoreSystemTypeEnum!
    useNFC: boolean; // Boolean!
  };
  CoreSystemNFCTag: {
    // root type
    appliedAt: string; // String!
    histories?: NexusGenRootTypes['CoreSystemNFCTagHistory'][] | null; // [CoreSystemNFCTagHistory!]
    NFCTagId: string; // String!
    remark: string; // String!
    systemId: number; // Int!
    unitId: number; // Int!
  };
  CoreSystemNFCTagHistory: {
    // root type
    appliedAt: string; // String!
    NFCTagId: string; // String!
    remark: string; // String!
  };
  CoreSystemParameter: {
    // root type
    category: NexusGenRootTypes['CoreSystemParameterCategory']; // CoreSystemParameterCategory!
    id: number; // Int!
    kksNumber: string; // String!
    measurementUnit: NexusGenRootTypes['CoreSystemParameterMeasurementUnit']; // CoreSystemParameterMeasurementUnit!
    name: string; // String!
    sortNumber: number; // Int!
    system: NexusGenRootTypes['CoreSystemParameterSystem']; // CoreSystemParameterSystem!
    unit: NexusGenRootTypes['CoreSystemParameterUnit']; // CoreSystemParameterUnit!
    valueRange: NexusGenRootTypes['CoreSystemParameterValueRange']; // CoreSystemParameterValueRange!
  };
  CoreSystemParameterCategory: {
    // root type
    id: number; // Int!
    name: string; // String!
  };
  CoreSystemParameterMeasurementUnit: {
    // root type
    id: number; // Int!
    name: string; // String!
    symbol: string; // String!
  };
  CoreSystemParameterSystem: {
    // root type
    id: number; // Int!
  };
  CoreSystemParameterUnit: {
    // root type
    id: number; // Int!
    name: string; // String!
  };
  CoreSystemParameterValueRange: {
    // root type
    extremeMax: number; // Float!
    extremeMin: number; // Float!
    max: number; // Float!
    min: number; // Float!
  };
  CoreSystemParametersSummary: {
    // root type
    data: NexusGenRootTypes['CoreSystemParameter'][]; // [CoreSystemParameter!]!
    totalCount: number; // Int!
  };
  CoreSystemSuStre: {
    // root type
    id: number; // Int!
    kksNumber: string; // String!
    name: string; // String!
    parentId?: number | null; // Int
    sortNumber: number; // Int!
    subSystems: NexusGenRootTypes['CoreSystemSuStre'][]; // [CoreSystemSuStre!]!
    type: NexusGenEnums['CoreSystemSuStreTypeEnum']; // CoreSystemSuStreTypeEnum!
  };
  CoreSystemSuStreParameter: {
    // root type
    id: number; // Int!
    kksNumber?: string | null; // String
    name: string; // String!
    sortNumber?: number | null; // Int
    system: NexusGenRootTypes['CoreSystemSuStreParameterSystem']; // CoreSystemSuStreParameterSystem!
    value: string; // String!
  };
  CoreSystemSuStreParameterSystem: {
    // root type
    id: number; // Int!
  };
  CoreSystemSuStreParametersSummary: {
    // root type
    data: NexusGenRootTypes['CoreSystemSuStreParameter'][]; // [CoreSystemSuStreParameter!]!
    totalCount: number; // Int!
  };
  CoreSystemSuStresSummary: {
    // root type
    data: NexusGenRootTypes['CoreSystemSuStre'][]; // [CoreSystemSuStre!]!
    totalCount: number; // Int!
  };
  CoreSystemsSummary: {
    // root type
    data: NexusGenRootTypes['CoreSystem'][]; // [CoreSystem!]!
    totalCount: number; // Int!
  };
  EquipmentCondition: {
    // root type
    description?: string | null; // String
    id: number; // Int!
    photos?: string[] | null; // [String!]
    planId: number; // Int!
    status: string; // String!
    syncedAt: string; // String!
    systemId: number; // Int!
    systemKKSNumber?: string | null; // String
    systemName?: string | null; // String
  };
  EquipmentStatus: {
    // root type
    color: NexusGenEnums['EquipmentStatusColorEnum']; // EquipmentStatusColorEnum!
    id: number; // Int!
    name: string; // String!
    sortNumber: number; // Int!
  };
  EquipmentStatusStateQuery: {
    // root type
    equipmentStatusState?: string | null; // String
    startStopState?: string | null; // String
    systemId: number; // Int!
    unitId: number; // Int!
  };
  EquipmentStatusesSummary: {
    // root type
    data: NexusGenRootTypes['EquipmentStatus'][]; // [EquipmentStatus!]!
    totalCount: number; // Int!
  };
  GraphSystem: {
    // root type
    labels: string[]; // [String!]!
    values: number[]; // [Float!]!
  };
  Group: {
    // root type
    id: number; // Int!
    name: string; // String!
    operationUsers: NexusGenRootTypes['User'][]; // [User!]!
  };
  GroupsSummary: {
    // root type
    data: NexusGenRootTypes['Group'][]; // [Group!]!
    totalCount: number; // Int!
  };
  LogsheetEquipmentStatusState: {
    // root type
    color: NexusGenEnums['EquipmentStatusColorEnum']; // EquipmentStatusColorEnum!
    id: number; // Int!
    name: string; // String!
  };
  LogsheetSystem: {
    // root type
    equipmentStatusState?: NexusGenRootTypes['LogsheetEquipmentStatusState'] | null; // LogsheetEquipmentStatusState
    equipmentStatusTracking: boolean; // Boolean!
    id: number; // Int!
    isValid: boolean; // Boolean!
    kksNumber: string; // String!
    name: string; // String!
    NFCTagId?: string | null; // String
    parentId?: number | null; // Int
    sortNumber: number; // Int!
    startStopState: string; // String!
    startStopTracking: boolean; // Boolean!
    subSystems: NexusGenRootTypes['LogsheetSystem'][]; // [LogsheetSystem!]!
    type: NexusGenEnums['CoreSystemTypeEnum']; // CoreSystemTypeEnum!
    useNFC: boolean; // Boolean!
  };
  MeasurementUnit: {
    // root type
    id: number; // Int!
    name: string; // String!
    symbol: string; // String!
  };
  MeasurementUnitsSummary: {
    // root type
    data: NexusGenRootTypes['MeasurementUnit'][]; // [MeasurementUnit!]!
    totalCount: number; // Int!
  };
  Mutation: {};
  Permission: {
    // root type
    description: string; // String!
    id: string; // String!
    name: string; // String!
  };
  PermissionsSummary: {
    // root type
    data: NexusGenRootTypes['Permission'][]; // [Permission!]!
    totalCount: number; // Int!
  };
  Plan: {
    // root type
    activities?: NexusGenRootTypes['Activity'][] | null; // [Activity!]
    createdAt: string; // String!
    createdBy: NexusGenRootTypes['User']; // User!
    date: string; // String!
    group: NexusGenRootTypes['Group']; // Group!
    id: number; // Int!
    number: string; // String!
    shift: NexusGenRootTypes['Shift']; // Shift!
    status: NexusGenEnums['PlansStatusByEnum']; // PlansStatusByEnum!
    supervisor?: NexusGenRootTypes['User'] | null; // User
    systemsCCR: NexusGenRootTypes['LogsheetSystem'][]; // [LogsheetSystem!]!
    systemsLocal: NexusGenRootTypes['LogsheetSystem'][]; // [LogsheetSystem!]!
    systemsStre: NexusGenRootTypes['LogsheetSystem'][]; // [LogsheetSystem!]!
    systemsSu: NexusGenRootTypes['LogsheetSystem'][]; // [LogsheetSystem!]!
    targets?: NexusGenRootTypes['Target'][] | null; // [Target!]
    unit: NexusGenRootTypes['Unit']; // Unit!
    users: NexusGenRootTypes['PlanUser'][]; // [PlanUser!]!
  };
  PlanUser: {
    // root type
    active: boolean; // Boolean!
    id: number; // Int!
    jobTitle?: string | null; // String
    name: string; // String!
    phone?: string | null; // String
    roles: NexusGenRootTypes['UserRole'][]; // [UserRole!]!
  };
  PlansSummary: {
    // root type
    data: NexusGenRootTypes['Plan'][]; // [Plan!]!
    totalCount: number; // Int!
  };
  Query: {};
  Record: {
    // root type
    id: number; // Int!
    loggedAt: string; // String!
    planId: number; // Int!
    status: NexusGenEnums['RecordStatusByEnum']; // RecordStatusByEnum!
    syncedAt: string; // String!
    system?: NexusGenRootTypes['RecordSystem'] | null; // RecordSystem
    systemId: number; // Int!
    systemParameter?: NexusGenRootTypes['RecordSystemParameter'] | null; // RecordSystemParameter
    systemParameterId: number; // Int!
    systemType: string; // String!
    userId: number; // Int!
    value: number; // Float!
  };
  RecordState: {
    // root type
    equipmentStatusState: string; // String!
    startStopState: NexusGenEnums['StartStopStateRecordEnum']; // StartStopStateRecordEnum!
  };
  RecordSummary: {
    // root type
    data: NexusGenRootTypes['Record'][]; // [Record!]!
    totalCount: number; // Int!
  };
  RecordSystem: {
    // root type
    id: number; // Int!
    name: string; // String!
  };
  RecordSystemParameter: {
    // root type
    category: NexusGenRootTypes['RecordSystemParameterCategory']; // RecordSystemParameterCategory!
    id: number; // Int!
    measurementUnit: NexusGenRootTypes['RecordSystemParameterMeasurementUnit']; // RecordSystemParameterMeasurementUnit!
    name: string; // String!
    valueRange: NexusGenRootTypes['CoreSystemParameterValueRange']; // CoreSystemParameterValueRange!
  };
  RecordSystemParameterCategory: {
    // root type
    name?: string | null; // String
  };
  RecordSystemParameterMeasurementUnit: {
    // root type
    symbol?: string | null; // String
  };
  Role: {
    // root type
    id: number; // Int!
    name: string; // String!
    permissions: NexusGenRootTypes['RolePermission'][]; // [RolePermission!]!
    status: NexusGenEnums['RoleStatusEnum']; // RoleStatusEnum!
  };
  RolePermission: {
    // root type
    description: string; // String!
    grantedAt: string; // String!
    id: string; // String!
    name: string; // String!
  };
  RolesSummary: {
    // root type
    data: NexusGenRootTypes['Role'][]; // [Role!]!
    totalCount: number; // Int!
  };
  Shift: {
    // root type
    endsAt: string; // String!
    id: number; // Int!
    name: string; // String!
    startsAt: string; // String!
  };
  ShiftsSummary: {
    // root type
    data: NexusGenRootTypes['Shift'][]; // [Shift!]!
    totalCount: number; // Int!
  };
  StartStopState: {
    // root type
    equipmentStatusState?: string | null; // String
    id: number; // Int!
    startStopState?: string | null; // String
    syncedAt: string; // String!
    systemId: number; // Int!
    unitId: number; // Int!
  };
  State: {
    // root type
    equipmentStatusState?: string | null; // String
    lastStart?: string | null; // String
    lastStop?: string | null; // String
    runningHours?: number | null; // Int
    startStopState?: string | null; // String
    systemId: number; // Int!
    unitId: number; // Int!
  };
  SystemRecord: {
    // root type
    id: number; // Int!
    name: string; // String!
    state?: NexusGenRootTypes['RecordState'] | null; // RecordState
    status: NexusGenEnums['RecordStatusByEnum']; // RecordStatusByEnum!
    systemParameter?: NexusGenRootTypes['RecordSystemParameter'] | null; // RecordSystemParameter
  };
  SystemRecordSummary: {
    // root type
    data: NexusGenRootTypes['SystemRecord'][]; // [SystemRecord!]!
    totalCount: number; // Int!
  };
  Target: {
    // root type
    description: string; // String!
    id: number; // Int!
    measurement?: NexusGenRootTypes['MeasurementUnit'] | null; // MeasurementUnit
    value: number; // Int!
  };
  TargetsSummary: {
    // root type
    data: NexusGenRootTypes['Target'][]; // [Target!]!
    totalCount: number; // Int!
  };
  Unit: {
    // root type
    id: number; // Int!
    name: string; // String!
  };
  UnitsSummary: {
    // root type
    data: NexusGenRootTypes['Unit'][]; // [Unit!]!
    totalCount: number; // Int!
  };
  UploadSummary: {
    // root type
    filename: string; // String!
  };
  User: {
    // root type
    gender: NexusGenEnums['GenderEnum']; // GenderEnum!
    id: number; // Int!
    jobTitle?: string | null; // String
    name: string; // String!
    nip?: string | null; // String
    phone?: string | null; // String
    photo?: string | null; // String
    registeredAt: string; // String!
    roles: NexusGenRootTypes['UserRole'][]; // [UserRole!]!
    status: NexusGenEnums['UserStatusEnum']; // UserStatusEnum!
    username: string; // String!
  };
  UserRole: {
    // root type
    assignedAt: string; // String!
    id: number; // Int!
    name: string; // String!
    permissions: NexusGenRootTypes['RolePermission'][]; // [RolePermission!]!
    status: NexusGenEnums['RoleStatusEnum']; // RoleStatusEnum!
  };
  UsersSummary: {
    // root type
    data: NexusGenRootTypes['User'][]; // [User!]!
    totalCount: number; // Int!
  };
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  Date: any;
  Upload: any;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  CategoriesSortByEnum: NexusGenEnums['CategoriesSortByEnum'];
  CoreSystemParametersSortByEnum: NexusGenEnums['CoreSystemParametersSortByEnum'];
  CoreSystemSuStreParametersSortByEnum: NexusGenEnums['CoreSystemSuStreParametersSortByEnum'];
  CoreSystemSuStreTypeEnum: NexusGenEnums['CoreSystemSuStreTypeEnum'];
  CoreSystemSuStresSortByEnum: NexusGenEnums['CoreSystemSuStresSortByEnum'];
  CoreSystemTypeEnum: NexusGenEnums['CoreSystemTypeEnum'];
  CoreSystemsSortByEnum: NexusGenEnums['CoreSystemsSortByEnum'];
  EquipmentConditionStatusEnum: NexusGenEnums['EquipmentConditionStatusEnum'];
  EquipmentStatusColorEnum: NexusGenEnums['EquipmentStatusColorEnum'];
  EquipmentStatusStateEnum: NexusGenEnums['EquipmentStatusStateEnum'];
  EquipmentStatusesSortByEnum: NexusGenEnums['EquipmentStatusesSortByEnum'];
  GenderEnum: NexusGenEnums['GenderEnum'];
  GroupsSortByEnum: NexusGenEnums['GroupsSortByEnum'];
  MeasurementUnitsSortByEnum: NexusGenEnums['MeasurementUnitsSortByEnum'];
  PermissionsSortByEnum: NexusGenEnums['PermissionsSortByEnum'];
  PlansSortByEnum: NexusGenEnums['PlansSortByEnum'];
  PlansStatusByEnum: NexusGenEnums['PlansStatusByEnum'];
  RecordStatusByEnum: NexusGenEnums['RecordStatusByEnum'];
  RecordSystemTypeByEnum: NexusGenEnums['RecordSystemTypeByEnum'];
  RoleStatusEnum: NexusGenEnums['RoleStatusEnum'];
  RolesSortByEnum: NexusGenEnums['RolesSortByEnum'];
  ShiftsSortByEnum: NexusGenEnums['ShiftsSortByEnum'];
  StartStopStateByEnum: NexusGenEnums['StartStopStateByEnum'];
  StartStopStateEnum: NexusGenEnums['StartStopStateEnum'];
  StartStopStateRecordEnum: NexusGenEnums['StartStopStateRecordEnum'];
  UnitsSortByEnum: NexusGenEnums['UnitsSortByEnum'];
  UserStatusEnum: NexusGenEnums['UserStatusEnum'];
  UsersSortByEnum: NexusGenEnums['UsersSortByEnum'];
}

export interface NexusGenFieldTypes {
  ActivitiesSummary: {
    // field return type
    data: NexusGenRootTypes['Activity'][]; // [Activity!]!
    totalCount: number; // Int!
  };
  Activity: {
    // field return type
    id: number; // Int!
    time: string; // String!
    value: string; // String!
  };
  CategoriesSummary: {
    // field return type
    data: NexusGenRootTypes['Category'][]; // [Category!]!
    totalCount: number; // Int!
  };
  Category: {
    // field return type
    id: number; // Int!
    name: string; // String!
  };
  CoreSystem: {
    // field return type
    equipmentStatusTracking: boolean; // Boolean!
    id: number; // Int!
    kksNumber: string; // String!
    name: string; // String!
    NFCTagId: string | null; // String
    NFCTags: NexusGenRootTypes['CoreSystemNFCTag'][]; // [CoreSystemNFCTag!]!
    parentId: number | null; // Int
    sortNumber: number; // Int!
    startStopTracking: boolean; // Boolean!
    State: NexusGenRootTypes['State'] | null; // State
    subSystems: NexusGenRootTypes['CoreSystem'][]; // [CoreSystem!]!
    type: NexusGenEnums['CoreSystemTypeEnum']; // CoreSystemTypeEnum!
    useNFC: boolean; // Boolean!
  };
  CoreSystemNFCTag: {
    // field return type
    appliedAt: string; // String!
    histories: NexusGenRootTypes['CoreSystemNFCTagHistory'][] | null; // [CoreSystemNFCTagHistory!]
    NFCTagId: string; // String!
    remark: string; // String!
    systemId: number; // Int!
    unitId: number; // Int!
  };
  CoreSystemNFCTagHistory: {
    // field return type
    appliedAt: string; // String!
    NFCTagId: string; // String!
    remark: string; // String!
  };
  CoreSystemParameter: {
    // field return type
    category: NexusGenRootTypes['CoreSystemParameterCategory']; // CoreSystemParameterCategory!
    id: number; // Int!
    kksNumber: string; // String!
    measurementUnit: NexusGenRootTypes['CoreSystemParameterMeasurementUnit']; // CoreSystemParameterMeasurementUnit!
    name: string; // String!
    sortNumber: number; // Int!
    system: NexusGenRootTypes['CoreSystemParameterSystem']; // CoreSystemParameterSystem!
    unit: NexusGenRootTypes['CoreSystemParameterUnit']; // CoreSystemParameterUnit!
    valueRange: NexusGenRootTypes['CoreSystemParameterValueRange']; // CoreSystemParameterValueRange!
  };
  CoreSystemParameterCategory: {
    // field return type
    id: number; // Int!
    name: string; // String!
  };
  CoreSystemParameterMeasurementUnit: {
    // field return type
    id: number; // Int!
    name: string; // String!
    symbol: string; // String!
  };
  CoreSystemParameterSystem: {
    // field return type
    id: number; // Int!
  };
  CoreSystemParameterUnit: {
    // field return type
    id: number; // Int!
    name: string; // String!
  };
  CoreSystemParameterValueRange: {
    // field return type
    extremeMax: number; // Float!
    extremeMin: number; // Float!
    max: number; // Float!
    min: number; // Float!
  };
  CoreSystemParametersSummary: {
    // field return type
    data: NexusGenRootTypes['CoreSystemParameter'][]; // [CoreSystemParameter!]!
    totalCount: number; // Int!
  };
  CoreSystemSuStre: {
    // field return type
    id: number; // Int!
    kksNumber: string; // String!
    name: string; // String!
    parentId: number | null; // Int
    sortNumber: number; // Int!
    subSystems: NexusGenRootTypes['CoreSystemSuStre'][]; // [CoreSystemSuStre!]!
    type: NexusGenEnums['CoreSystemSuStreTypeEnum']; // CoreSystemSuStreTypeEnum!
  };
  CoreSystemSuStreParameter: {
    // field return type
    id: number; // Int!
    kksNumber: string | null; // String
    name: string; // String!
    sortNumber: number | null; // Int
    system: NexusGenRootTypes['CoreSystemSuStreParameterSystem']; // CoreSystemSuStreParameterSystem!
    value: string; // String!
  };
  CoreSystemSuStreParameterSystem: {
    // field return type
    id: number; // Int!
  };
  CoreSystemSuStreParametersSummary: {
    // field return type
    data: NexusGenRootTypes['CoreSystemSuStreParameter'][]; // [CoreSystemSuStreParameter!]!
    totalCount: number; // Int!
  };
  CoreSystemSuStresSummary: {
    // field return type
    data: NexusGenRootTypes['CoreSystemSuStre'][]; // [CoreSystemSuStre!]!
    totalCount: number; // Int!
  };
  CoreSystemsSummary: {
    // field return type
    data: NexusGenRootTypes['CoreSystem'][]; // [CoreSystem!]!
    totalCount: number; // Int!
  };
  EquipmentCondition: {
    // field return type
    description: string | null; // String
    id: number; // Int!
    photos: string[] | null; // [String!]
    planId: number; // Int!
    status: string; // String!
    syncedAt: string; // String!
    systemId: number; // Int!
    systemKKSNumber: string | null; // String
    systemName: string | null; // String
  };
  EquipmentStatus: {
    // field return type
    color: NexusGenEnums['EquipmentStatusColorEnum']; // EquipmentStatusColorEnum!
    id: number; // Int!
    name: string; // String!
    sortNumber: number; // Int!
  };
  EquipmentStatusStateQuery: {
    // field return type
    equipmentStatusState: string | null; // String
    startStopState: string | null; // String
    systemId: number; // Int!
    unitId: number; // Int!
  };
  EquipmentStatusesSummary: {
    // field return type
    data: NexusGenRootTypes['EquipmentStatus'][]; // [EquipmentStatus!]!
    totalCount: number; // Int!
  };
  GraphSystem: {
    // field return type
    labels: string[]; // [String!]!
    values: number[]; // [Float!]!
  };
  Group: {
    // field return type
    id: number; // Int!
    name: string; // String!
    operationUsers: NexusGenRootTypes['User'][]; // [User!]!
  };
  GroupsSummary: {
    // field return type
    data: NexusGenRootTypes['Group'][]; // [Group!]!
    totalCount: number; // Int!
  };
  LogsheetEquipmentStatusState: {
    // field return type
    color: NexusGenEnums['EquipmentStatusColorEnum']; // EquipmentStatusColorEnum!
    id: number; // Int!
    name: string; // String!
  };
  LogsheetSystem: {
    // field return type
    equipmentStatusState: NexusGenRootTypes['LogsheetEquipmentStatusState'] | null; // LogsheetEquipmentStatusState
    equipmentStatusTracking: boolean; // Boolean!
    id: number; // Int!
    isValid: boolean; // Boolean!
    kksNumber: string; // String!
    name: string; // String!
    NFCTagId: string | null; // String
    parentId: number | null; // Int
    sortNumber: number; // Int!
    startStopState: string; // String!
    startStopTracking: boolean; // Boolean!
    subSystems: NexusGenRootTypes['LogsheetSystem'][]; // [LogsheetSystem!]!
    type: NexusGenEnums['CoreSystemTypeEnum']; // CoreSystemTypeEnum!
    useNFC: boolean; // Boolean!
  };
  MeasurementUnit: {
    // field return type
    id: number; // Int!
    name: string; // String!
    symbol: string; // String!
  };
  MeasurementUnitsSummary: {
    // field return type
    data: NexusGenRootTypes['MeasurementUnit'][]; // [MeasurementUnit!]!
    totalCount: number; // Int!
  };
  Mutation: {
    // field return type
    healtCheck: string; // String!
  };
  Permission: {
    // field return type
    description: string; // String!
    id: string; // String!
    name: string; // String!
  };
  PermissionsSummary: {
    // field return type
    data: NexusGenRootTypes['Permission'][]; // [Permission!]!
    totalCount: number; // Int!
  };
  Plan: {
    // field return type
    activities: NexusGenRootTypes['Activity'][] | null; // [Activity!]
    createdAt: string; // String!
    createdBy: NexusGenRootTypes['User']; // User!
    date: string; // String!
    group: NexusGenRootTypes['Group']; // Group!
    id: number; // Int!
    number: string; // String!
    shift: NexusGenRootTypes['Shift']; // Shift!
    status: NexusGenEnums['PlansStatusByEnum']; // PlansStatusByEnum!
    supervisor: NexusGenRootTypes['User'] | null; // User
    systemsCCR: NexusGenRootTypes['LogsheetSystem'][]; // [LogsheetSystem!]!
    systemsLocal: NexusGenRootTypes['LogsheetSystem'][]; // [LogsheetSystem!]!
    systemsStre: NexusGenRootTypes['LogsheetSystem'][]; // [LogsheetSystem!]!
    systemsSu: NexusGenRootTypes['LogsheetSystem'][]; // [LogsheetSystem!]!
    targets: NexusGenRootTypes['Target'][] | null; // [Target!]
    unit: NexusGenRootTypes['Unit']; // Unit!
    users: NexusGenRootTypes['PlanUser'][]; // [PlanUser!]!
  };
  PlanUser: {
    // field return type
    active: boolean; // Boolean!
    id: number; // Int!
    jobTitle: string | null; // String
    name: string; // String!
    phone: string | null; // String
    roles: NexusGenRootTypes['UserRole'][]; // [UserRole!]!
  };
  PlansSummary: {
    // field return type
    data: NexusGenRootTypes['Plan'][]; // [Plan!]!
    totalCount: number; // Int!
  };
  Query: {
    // field return type
    healtCheck: string; // String!
  };
  Record: {
    // field return type
    id: number; // Int!
    loggedAt: string; // String!
    planId: number; // Int!
    status: NexusGenEnums['RecordStatusByEnum']; // RecordStatusByEnum!
    syncedAt: string; // String!
    system: NexusGenRootTypes['RecordSystem'] | null; // RecordSystem
    systemId: number; // Int!
    systemParameter: NexusGenRootTypes['RecordSystemParameter'] | null; // RecordSystemParameter
    systemParameterId: number; // Int!
    systemType: string; // String!
    userId: number; // Int!
    value: number; // Float!
  };
  RecordState: {
    // field return type
    equipmentStatusState: string; // String!
    startStopState: NexusGenEnums['StartStopStateRecordEnum']; // StartStopStateRecordEnum!
  };
  RecordSummary: {
    // field return type
    data: NexusGenRootTypes['Record'][]; // [Record!]!
    totalCount: number; // Int!
  };
  RecordSystem: {
    // field return type
    id: number; // Int!
    name: string; // String!
  };
  RecordSystemParameter: {
    // field return type
    category: NexusGenRootTypes['RecordSystemParameterCategory']; // RecordSystemParameterCategory!
    id: number; // Int!
    measurementUnit: NexusGenRootTypes['RecordSystemParameterMeasurementUnit']; // RecordSystemParameterMeasurementUnit!
    name: string; // String!
    valueRange: NexusGenRootTypes['CoreSystemParameterValueRange']; // CoreSystemParameterValueRange!
  };
  RecordSystemParameterCategory: {
    // field return type
    name: string | null; // String
  };
  RecordSystemParameterMeasurementUnit: {
    // field return type
    symbol: string | null; // String
  };
  Role: {
    // field return type
    id: number; // Int!
    name: string; // String!
    permissions: NexusGenRootTypes['RolePermission'][]; // [RolePermission!]!
    status: NexusGenEnums['RoleStatusEnum']; // RoleStatusEnum!
  };
  RolePermission: {
    // field return type
    description: string; // String!
    grantedAt: string; // String!
    id: string; // String!
    name: string; // String!
  };
  RolesSummary: {
    // field return type
    data: NexusGenRootTypes['Role'][]; // [Role!]!
    totalCount: number; // Int!
  };
  Shift: {
    // field return type
    endsAt: string; // String!
    id: number; // Int!
    name: string; // String!
    startsAt: string; // String!
  };
  ShiftsSummary: {
    // field return type
    data: NexusGenRootTypes['Shift'][]; // [Shift!]!
    totalCount: number; // Int!
  };
  StartStopState: {
    // field return type
    equipmentStatusState: string | null; // String
    id: number; // Int!
    startStopState: string | null; // String
    syncedAt: string; // String!
    systemId: number; // Int!
    unitId: number; // Int!
  };
  State: {
    // field return type
    equipmentStatusState: string | null; // String
    lastStart: string | null; // String
    lastStop: string | null; // String
    runningHours: number | null; // Int
    startStopState: string | null; // String
    systemId: number; // Int!
    unitId: number; // Int!
  };
  SystemRecord: {
    // field return type
    id: number; // Int!
    name: string; // String!
    state: NexusGenRootTypes['RecordState'] | null; // RecordState
    status: NexusGenEnums['RecordStatusByEnum']; // RecordStatusByEnum!
    systemParameter: NexusGenRootTypes['RecordSystemParameter'] | null; // RecordSystemParameter
  };
  SystemRecordSummary: {
    // field return type
    data: NexusGenRootTypes['SystemRecord'][]; // [SystemRecord!]!
    totalCount: number; // Int!
  };
  Target: {
    // field return type
    description: string; // String!
    id: number; // Int!
    measurement: NexusGenRootTypes['MeasurementUnit'] | null; // MeasurementUnit
    value: number; // Int!
  };
  TargetsSummary: {
    // field return type
    data: NexusGenRootTypes['Target'][]; // [Target!]!
    totalCount: number; // Int!
  };
  Unit: {
    // field return type
    id: number; // Int!
    name: string; // String!
  };
  UnitsSummary: {
    // field return type
    data: NexusGenRootTypes['Unit'][]; // [Unit!]!
    totalCount: number; // Int!
  };
  UploadSummary: {
    // field return type
    filename: string; // String!
  };
  User: {
    // field return type
    gender: NexusGenEnums['GenderEnum']; // GenderEnum!
    id: number; // Int!
    jobTitle: string | null; // String
    name: string; // String!
    nip: string | null; // String
    phone: string | null; // String
    photo: string | null; // String
    registeredAt: string; // String!
    roles: NexusGenRootTypes['UserRole'][]; // [UserRole!]!
    status: NexusGenEnums['UserStatusEnum']; // UserStatusEnum!
    username: string; // String!
  };
  UserRole: {
    // field return type
    assignedAt: string; // String!
    id: number; // Int!
    name: string; // String!
    permissions: NexusGenRootTypes['RolePermission'][]; // [RolePermission!]!
    status: NexusGenEnums['RoleStatusEnum']; // RoleStatusEnum!
  };
  UsersSummary: {
    // field return type
    data: NexusGenRootTypes['User'][]; // [User!]!
    totalCount: number; // Int!
  };
}

export interface NexusGenArgTypes {}

export interface NexusGenAbstractResolveReturnTypes {}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames =
  | 'ActivitiesSummary'
  | 'Activity'
  | 'CategoriesSummary'
  | 'Category'
  | 'CoreSystem'
  | 'CoreSystemNFCTag'
  | 'CoreSystemNFCTagHistory'
  | 'CoreSystemParameter'
  | 'CoreSystemParameterCategory'
  | 'CoreSystemParameterMeasurementUnit'
  | 'CoreSystemParameterSystem'
  | 'CoreSystemParameterUnit'
  | 'CoreSystemParameterValueRange'
  | 'CoreSystemParametersSummary'
  | 'CoreSystemSuStre'
  | 'CoreSystemSuStreParameter'
  | 'CoreSystemSuStreParameterSystem'
  | 'CoreSystemSuStreParametersSummary'
  | 'CoreSystemSuStresSummary'
  | 'CoreSystemsSummary'
  | 'EquipmentCondition'
  | 'EquipmentStatus'
  | 'EquipmentStatusStateQuery'
  | 'EquipmentStatusesSummary'
  | 'GraphSystem'
  | 'Group'
  | 'GroupsSummary'
  | 'LogsheetEquipmentStatusState'
  | 'LogsheetSystem'
  | 'MeasurementUnit'
  | 'MeasurementUnitsSummary'
  | 'Mutation'
  | 'Permission'
  | 'PermissionsSummary'
  | 'Plan'
  | 'PlanUser'
  | 'PlansSummary'
  | 'Query'
  | 'Record'
  | 'RecordState'
  | 'RecordSummary'
  | 'RecordSystem'
  | 'RecordSystemParameter'
  | 'RecordSystemParameterCategory'
  | 'RecordSystemParameterMeasurementUnit'
  | 'Role'
  | 'RolePermission'
  | 'RolesSummary'
  | 'Shift'
  | 'ShiftsSummary'
  | 'StartStopState'
  | 'State'
  | 'SystemRecord'
  | 'SystemRecordSummary'
  | 'Target'
  | 'TargetsSummary'
  | 'Unit'
  | 'UnitsSummary'
  | 'UploadSummary'
  | 'User'
  | 'UserRole'
  | 'UsersSummary';

export type NexusGenInputNames = never;

export type NexusGenEnumNames =
  | 'CategoriesSortByEnum'
  | 'CoreSystemParametersSortByEnum'
  | 'CoreSystemSuStreParametersSortByEnum'
  | 'CoreSystemSuStreTypeEnum'
  | 'CoreSystemSuStresSortByEnum'
  | 'CoreSystemTypeEnum'
  | 'CoreSystemsSortByEnum'
  | 'EquipmentConditionStatusEnum'
  | 'EquipmentStatusColorEnum'
  | 'EquipmentStatusStateEnum'
  | 'EquipmentStatusesSortByEnum'
  | 'GenderEnum'
  | 'GroupsSortByEnum'
  | 'MeasurementUnitsSortByEnum'
  | 'PermissionsSortByEnum'
  | 'PlansSortByEnum'
  | 'PlansStatusByEnum'
  | 'RecordStatusByEnum'
  | 'RecordSystemTypeByEnum'
  | 'RoleStatusEnum'
  | 'RolesSortByEnum'
  | 'ShiftsSortByEnum'
  | 'StartStopStateByEnum'
  | 'StartStopStateEnum'
  | 'StartStopStateRecordEnum'
  | 'UnitsSortByEnum'
  | 'UserStatusEnum'
  | 'UsersSortByEnum';

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = 'Boolean' | 'Date' | 'Float' | 'ID' | 'Int' | 'String' | 'Upload';

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes:
    | NexusGenTypes['objectNames']
    | NexusGenTypes['enumNames']
    | NexusGenTypes['unionNames']
    | NexusGenTypes['interfaceNames']
    | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes'];
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}
